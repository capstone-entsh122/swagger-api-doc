openapi: 3.0.0
info:
  title: One-Stop Sport App API
  version: 1.0.0
  description: API documentation for the One-Stop Sport App
servers:
  - url: http://localhost:3000
    description: Local server
  - url: https://api.yoursportapp.com
    description: Production server
paths:
  /api/users/signup:
    post:
      summary: User Signup
      operationId: userSignup
      requestBody:
        description: User signup details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                displayName:
                  type: string
                  example: User Name
      responses:
        '200':
          description: Signup successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Signup successful
                  error:
                    type: string
                    nullable: true
                    example: null
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        example: 'user@example.com'
                      displayName:
                        type: string
                        example: 'user Name'
                      points:
                        type: integer
                        example: 0
                      joinedCommunities:
                        type: array
                        items:
                          type: string
                        example: []
                      dailyCalories:
                        type: integer
                        example: 0
        '500':
          description: Signup failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error during user signup
  /api/users/preferences:
    post:
      summary: Set User Preferences
      operationId: setUserPreferences
      security:
        - bearerAuth: []
      requestBody:
        description: User preferences details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gender:
                  type: string
                age:
                  type: number
                equipment:
                  type: string
                motivation:
                  type: string
                  example: Get fit
                availableTime:
                  type: integer
                  example: 30
                fitnessLevel:
                  type: string
                  example: average
                placePreference:
                  type: string
                  example: home
                socialPreference:
                  type: string
                  example: alone
                diseaseHistory:
                  type: array
                  items:
                    type: string
                  example: ["hypertension"]
                weight: 
                  type: integer
                  example: 50
                height:
                  type: integer
                  example: 160
      responses:
        '200':
          description: Preferences set successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Preferences set successfully
                  recommendedSports:
                    type: array
                    items:
                      type: string
                    example: ["Yoga", "Running", "Swimming"]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid input data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error updating preference
    put:
      summary: Update User Preferences
      operationId: updateUserPreferences
      security:
        - bearerAuth: []
      requestBody:
        description: User preferences data to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gender:
                  type: string
                age:
                  type: number
                equipment:
                  type: string
                motivation:
                  type: string
                  example: Lose weight
                availableTime:
                  type: integer
                  example: 45
                fitnessLevel:
                  type: string
                  example: good
                placePreference:
                  type: string
                  example: outdoor
                socialPreference:
                  type: string
                  example: with others
                diseaseHistory:
                  type: array
                  items:
                    type: string
                  example: ["cardiovascular"]
      responses:
        '200':
          description: Preferences updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Preferences updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid input data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error updating preference
  /api/users/profile:
    get:
      summary: Get User Profile
      operationId: getUserProfile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: success
                  error:
                    type: string
                    nullable: true
                    example: null
                  data:
                    type: object
                    properties:
                      userId:
                        type: string
                        example: user123
                      email:
                        type: string
                        example: user@example.com
                      displayName:
                        type: string
                        example: User Name
                      gender:
                        type: string
                        example: male
                      age:
                        type: integer
                        example: 25
                      location:
                        type: string
                        example: City, Country
                      equipment:
                        type: string
                        example: none
                      preferences:
                        type: object
                        properties:
                          motivation:
                            type: string
                            example: Get fit
                          availableTime:
                            type: integer
                            example: 30
                          fitnessLevel:
                            type: string
                            example: average
                          placePreference:
                            type: string
                            example: home
                          socialPreference:
                            type: string
                            example: alone
                          diseaseHistory:
                            type: array
                            items:
                              type: string
                            example: ["hypertension"]
                          communities:
                            type: array
                            items:
                              type: string
                            example: ["community123"]
                          points:
                            type: integer
                            example: 100
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error getting user details
    put:
      summary: Update User Profile
      operationId: updateUserProfile
      security:
        - bearerAuth: []
      requestBody:
        description: User profile data to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                  example: Updated Name
                location:
                  type: object
                  properties:
                    latitude:
                      type: double
                      example: 3.9167
                    longitude:
                      type: double
                      example: 23.45
                  example:
                    latitude: 3.9167
                    longitude: 23.45
                email:
                  type: string
                  example: update@example.com
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Profile updated successfully
                  data:
                    type: object
                    properties:
                      displayName:
                        type: string
                      location:
                        type: object
                        properties:
                          latitude:
                            type: double
                          longitude:
                            type: double
                      email:
                        type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid input data
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error updating user details
  /api/users/profile/photo:
    post:
      summary: Upload Profile Photo
      operationId: uploadProfilePhoto
      security:
        - bearerAuth: []
      requestBody:
        description: Profile photo upload
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
      responses:
        '200':
          description: Profile photo uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Profile photo uploaded successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No file uploaded
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error uploading profile photo
    get:
      summary: Get Profile Photo
      operationId: getProfilePhoto
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile photo URL retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  profilePhotoUrl:
                    type: string
                    example: http://example.com/photo.jpg
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: Profile photo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Profile photo not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error retrieving profile photo URL
  /api/users/delete:
    delete:
      summary: Delete User Account
      operationId: deleteUserAccount
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User account deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User account deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error deleting user account
  /api/classify:
    post:
      summary: Predict Food Calories
      operationId: predictFoodCalories
      requestBody:
        description: Image of the food
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary        
      responses:
        '200':
          description: Prediction successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  label:
                    type: string
                  nutrition:
                    type: object
                    example: {Porsi: 100g, Kalori: 130, Protein: 20, Lemak: 10, Karbohidrat: 30, Serat: 10 }
        '400':
          description: Prediction failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Prediction failed
                  error:
                    type: string
                    example: Invalid input data
  /api/classify/set:
    post:
      summary: Save the classified food calories to the database
      requestBody:
        description: JSON object containing classified food data
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                foodItem:
                  type: string
                  example: Apple
                calories:
                  type: integer
                  example: 95
      responses:
        '200':
          description: Saved calories
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Calories updated successfully
        '400':
          description: Saved Calories
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Bad Request: Missing calories value'
  /api/users/communities:
    get:
      summary: Lists all communities joined by user
      responses:
        '200':
          description: A list of communities joined by user
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    communityId:
                      type: string
                      example: community123
                    name:
                      type: string
                      example: Community Name
                    description:
                      type: string
                      example: Community Description
                    creator: 
                      type: string
                      example: Creator Name
                    members: 
                      type: array
                      items:
                        type: string
                      example: ["Member1", "Member2"]
                    posts: 
                      type: array
                      items:
                        type: object
                        properties:
                          content: 
                            type: string
                            example: 'This is a post content'
                          author:
                            type: string
                            example: Author Name
                      example:
                        - content: 'This is a post content'
                          author: Author Name
                    events:
                      type: array
                      items:
                        type: object
                        properties:
                          name: 
                            type: string
                            example: Event Name
                          description:
                            type: string
                            example: Event Description
                          creator:
                            type: string
                            example: Creator Name
                          communities:
                            type: string
                            example: community123
                          startTime: 
                            type: string
                            example: "2023-05-25T15:00:00Z"
                          endTime:
                            type: string
                            example: "2023-05-25T16:00:00Z"
                          participants:
                            type: array
                            items:
                              type: string
                            example: ["Participant1", "Participant2"]
                          points:
                            type: integer
                            example: 100
                      example:
                        - name: Event Name
                          description: Event Description
                          creator: Creator Name
                          startTime: "2023-05-25T15:00:00Z"
                          endTime: "2023-05-25T16:00:00Z"
                          participants: ["Participant1", "Participant2"]
                          points: 100
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
  /api/communities:
    post:
      summary: Create communities
      operationId: CreateCommunities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Community Name
                description:
                  type: string
                  example: Community Description
                creator:
                  type: string
                  example: Creator Name
                members:
                  type: array
                  items:
                    type: string
                  example: ["Member1", "Member2"]
                posts:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
                        example: 'This is a post content'
                      author:
                        type: string
                        example: Author Name
                  example:
                    - content: 'This is a post content'
                      author: Author Name
                events:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        example: Event Name
                      description:
                        type: string
                        example: Event Description
                      creator:
                        type: string
                        example: Creator Name
                      startTime:
                        type: string
                        format: date-time
                        example: "2023-05-25T15:00:00Z"
                      endTime:
                        type: string
                        format: date-time
                        example: "2023-05-25T16:00:00Z"
                      participants:
                        type: array
                        items:
                          type: string
                        example: ["Participant1", "Participant2"]
                      points:
                        type: integer
                        example: 100
                  example:
                    - name: Event Name
                      description: Event Description
                      creator: Creator Name
                      startTime: "2023-05-25T15:00:00Z"
                      endTime: "2023-05-25T16:00:00Z"
                      participants: ["Participant1", "Participant2"]
                      points: 100
      responses:
        '200':
          description: Create Your communities
          content:
            application/json:
              schema:
                type: object
                properties:
                  communitiesId:
                    type: string
                    example: community123
                  name:
                    type: string
                    example: Community Name
                  description:
                    type: string
                    example: Community Description
                  creator: 
                    type: string
                    example: Creator Name
                  members: 
                    type: array
                    items:
                      type: string
                    example: ["Member1", "Member2"]
                  posts: 
                    type: array
                    items:
                      type: object
                      properties:
                        content: 
                          type: string
                          example: 'This is a post content'
                        author:
                          type: string
                          example: Author Name
                    example:
                      - content: 'This is a post content'
                        author: Author Name
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        name: 
                          type: string
                          example: Event Name
                        description:
                          type: string
                          example: Event Description
                        creator:
                          type: string
                          example: Creator Name
                        communities:
                          type: string
                          example: community123
                        startTime: 
                          type: string
                          example: "2023-05-25T15:00:00Z"
                        endTime:
                          type: string
                          example: "2023-05-25T16:00:00Z"
                        participants:
                          type: array
                          items:
                            type: string
                          example: ["Participant1", "Participant2"]
                        points:
                          type: integer
                          example: 100
                    example:
                      - name: Event Name
                        description: Event Description
                        creator: Creator Name
                        startTime: "2023-05-25T15:00:00Z"
                        endTime: "2023-05-25T16:00:00Z"
                        participants: ["Participant1", "Participant2"]
                        points: 100
        '400':
          description: Failed to create communities
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to create communities
                  error:
                    type: string
                    example: Invalid input data
    get:
      summary: Lists all communities
      operationId: getProfilePhoto
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of communities
          content:
            application/json:
              schema:
                type: object
                properties:
                  communityId:
                    type: string
                    example: community123
                  name:
                    type: string
                    example: Community Name
                  description:
                    type: string
                    example: Community Description
                  creator: 
                    type: string
                    example: Creator Name
                  members: 
                    type: array
                    items:
                      type: string
                    example: ["Member1", "Member2"]
                  posts: 
                    type: array
                    items:
                      type: object
                      properties:
                        content: 
                          type: string
                          example: 'This is a post content'
                        author:
                          type: string
                          example: Author Name
                    example:
                      - content: 'This is a post content'
                        author: Author Name
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        name: 
                          type: string
                          example: Event Name
                        description:
                          type: string
                          example: Event Description
                        creator:
                          type: string
                          example: Creator Name
                        communities:
                          type: string
                          example: community123
                        startTime: 
                          type: string
                          example: "2023-05-25T15:00:00Z"
                        endTime:
                          type: string
                          example: "2023-05-25T16:00:00Z"
                        participants:
                          type: array
                          items:
                            type: string
                          example: ["Participant1", "Participant2"]
                        points:
                          type: integer
                          example: 100
                    example:
                      - name: Event Name
                        description: Event Description
                        creator: Creator Name
                        startTime: "2023-05-25T15:00:00Z"
                        endTime: "2023-05-25T16:00:00Z"
                        participants: ["Participant1", "Participant2"]
                        points: 100
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Community photo not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error get Community
  /api/communities/{id}:
    get:
      summary: Get community by ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID of the community to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  communitiesId:
                    type: string
                    example: community123
                  name:
                    type: string
                    example: Community Name
                  description:
                    type: string
                    example: Community Description
                  creator: 
                    type: string
                    example: Creator Name
                  members: 
                    type: array
                    items:
                      type: string
                    example: ["Member1", "Member2"]
                  posts: 
                    type: array
                    items:
                      type: object
                      properties:
                        content: 
                          type: string
                          example: 'This is a post content'
                        author:
                          type: string
                          example: Author Name
                    example:
                      - content: 'This is a post content'
                        author: Author Name
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        name: 
                          type: string
                          example: Event Name
                        description:
                          type: string
                          example: Event Description
                        creator:
                          type: string
                          example: Creator Name
                        communities:
                          type: string
                          example: community123
                        startTime: 
                          type: string
                          example: "2023-05-25T15:00:00Z"
                        endTime:
                          type: string
                          example: "2023-05-25T16:00:00Z"
                        participants:
                          type: array
                          items:
                            type: string
                          example: ["Participant1", "Participant2"]
                        points:
                          type: integer
                          example: 100
                    example:
                      - name: Event Name
                        description: Event Description
                        creator: Creator Name
                        startTime: "2023-05-25T15:00:00Z"
                        endTime: "2023-05-25T16:00:00Z"
                        participants: ["Participant1", "Participant2"]
                        points: 100
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Get Community failed
                  error:
                    type: string
                    example: Invalid input data
    put:
      summary: Updates a community by its ID
      operationId: updatesCommunitybyID
      requestBody:
        description: Updates a community by its ID
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                communityId:
                    type: string
                    example: community123
      responses:
        '200':
          description: Community updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  communityId:
                    type: string
                    example: community123
                  name:
                    type: string
                    example: Community Name
                  description:
                    type: string
                    example: Community Description
                  creator: 
                    type: string
                    example: Creator Name
                  members: 
                    type: array
                    items:
                      type: string
                    example: ["Member1", "Member2"]
                  posts: 
                    type: array
                    items:
                      type: object
                      properties:
                        content: 
                          type: string
                          example: 'This is a post content'
                        author:
                          type: string
                          example: Author Name
                    example:
                      - content: 'This is a post content'
                        author: Author Name
                  events:
                    type: array
                    items:
                      type: object
                      properties:
                        name: 
                          type: string
                          example: Event Name
                        description:
                          type: string
                          example: Event Description
                        creator:
                          type: string
                          example: Creator Name
                        communities:
                          type: string
                          example: community123
                        startTime: 
                          type: string
                          example: "2023-05-25T15:00:00Z"
                        endTime:
                          type: string
                          example: "2023-05-25T16:00:00Z"
                        participants:
                          type: array
                          items:
                            type: string
                          example: ["Participant1", "Participant2"]
                        points:
                          type: integer
                          example: 100
                    example:
                      - name: Event Name
                        description: Event Description
                        creator: Creator Name
                        startTime: "2023-05-25T15:00:00Z"
                        endTime: "2023-05-25T16:00:00Z"
                        participants: ["Participant1", "Participant2"]
                        points: 100
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Update failed
                  error:
                    type: string
                    example: Invalid input data
    delete:
      summary: Delete a Community by ID
      operationId: deleteCommunitybyID
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Community deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Community deleted successfully
        '400':
          description: Deletion failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Deletion failed
                  error:
                    type: string
                    example: Invalid input data  
  /api/users/memberships/{communityId}:
    put:
      summary: Join community
      operationId: joinCommunity
      requestBody:
        description: Join Community
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  example: user123
      responses:
        '200':
          description: Successfully joined the community
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully joined the community
                  userId:
                    type: string
                    example: user123
                  communityId:
                    type: string
                    example: community123
        '400':
          description: Failed to join the community
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to join the community
                  error:
                    type: string
                    example: Invalid input data
    delete:
      summary: Leave community
      operationId: leaveCommunity
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully left the community
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully left the community
                  userId:
                    type: string
                    example: user123
                  communityId:
                    type: string
                    example: community123
        '404':
          description: Community or membership not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Community or membership not found
                  error:
                    type: string
                    example: Not Found
  /api/users/memberships:
    get:
      summary: Get list of joined communities
      operationId: getJoinedCommunities
      responses:
        '200':
          description: List of joined communities
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    example: user123
                  communities:
                    type: array
                    items:
                      type: object
                      properties:
                        communityId:
                          type: string
                          example: community123
                        communityName:
                          type: string
                          example: Community Name
                        joinedAt:
                          type: string
                          format: date-time
                          example: '2024-01-15T08:00:00Z'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
                  error:
                    type: string
                    example: Not Found
  /api/communities/{communityId}/posts:
    get:
      summary: Get Your Communities
      operationId: GetYourCommunities
      responses:
        '200':
          description: List of communities
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    postId:
                      type: string
                      example: post123
                    content:
                      type: string
                      example: 'This is a post content'
                    author:
                      type: string
                      example: Author Name
        '400':
          description: Failed to get your communities
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get your communities
                  error:
                    type: string
                    example: Invalid input data
    post:
      summary: Create a New Post
      operationId: createNewPost
      requestBody:
        description: Create a new post in a community
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: 'This is a post content.'
                author:
                  type: string
                  example: user123
      responses:
        '201':
          description: Post created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Post created successfully
        '400':
          description: Post creation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Post creation failed
                  error:
                    type: string
                    example: Invalid input data          
    put:
      summary: Update a Post
      operationId: updatePost
      requestBody:
        description: Update post details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                  example: post123
                content:
                  type: string
                  example: 'This is a post content.'
      responses:
        '200':
          description: Post updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Post updated successfully
        '400':
          description: Update failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Update failed
                  error:
                    type: string
                    example: Invalid input data
    delete:
      summary: Delete a Post
      operationId: deletePost
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Post deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Post deleted successfully
                  postId:
                    type: string
                    example: post123
        '400':
          description: Deletion failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Deletion failed
                  error:
                    type: string
                    example: Invalid input data
  /api/communities/{communityId}/posts/{postId}:
    get:
      summary: Retrieves a post by its ID within a specific community
      operationId: GetPostById
      parameters:
        - in: path
          name: communityId
          required: true
          schema:
            type: string
          description: ID of the community
        - in: path
          name: postId
          required: true
          schema:
            type: string
          description: ID of the post
      responses:
        '200':
          description: The post with the given ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  postId:
                    type: string
                    example: post123
                  content:
                    type: string
                    example: 'This is a post content'
                  author:
                    type: string
                    example: 'Author Name'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Post not found'
                  error:
                    type: string
                    example: 'No post with the given ID found in the specified community'
  /api/communities/{communityId}/events:
    post:
      summary: Create a New Event
      operationId: createNewEvent
      requestBody:
        description: Create a new event in a community
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                  example: Event Name
                description:
                  type: string
                  example: Event Description
                creator:
                  type: string
                  example: Creator Name
                communities:
                  type: string
                  example: Community Name
                startTime: 
                  type: string
                  example: "2023-05-25T15:00:00Z"
                endTime:
                  type: string
                  example: "2023-05-25T16:00:00Z"
                participants:
                  type: string
                  example: Name Participant
                points:
                  type: integer
                  example: 100
      responses:
        '201':
          description: Event created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Event created successfully
        '400':
          description: Event creation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Event creation failed
                  error:
                    type: string
                    example: Invalid input data
    put:
      summary: Update an Event
      operationId: updateEvent
      security:
        - bearerAuth: []
      requestBody:
        description: Update event details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                eventId:
                  type: string
                  example: event123
                name: 
                  type: string
                  example: Event Name
                description:
                  type: string
                  example: Event Description
                startTime: 
                  type: string
                  example: "2023-05-25T15:00:00Z"
                endTime:
                  type: string
                  example: "2023-05-25T16:00:00Z"
                participants:
                  type: string
                  example: Name Participant
      responses:
        '200':
          description: Event updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Event updated successfully
        '400':
          description: Update failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Update failed
                  error:
                    type: string
                    example: Invalid input data
    get:
      summary: Get Events
      operationId: getEvents
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name: 
                      type: string
                      example: Event Name
                    description:
                      type: string
                      example: Event Description
                    creator:
                      type: string
                      example: Creator Name
                    communities:
                      type: string
                      example: Community Name
                    startTime: 
                      type: string
                      example: "2023-05-25T15:00:00Z"
                    endTime:
                      type: string
                      example: "2023-05-25T16:00:00Z"
                    participants:
                      type: string
                      example: Name Participant
                    points:
                      type: integer
                      example: 100
        '400':
          description: Failed to get events
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get events
                  error:
                    type: string
                    example: Invalid input data
  /api/sportplan/{planId}:
    get:
      summary: Get Your SportPlan
      operationId: getYourSportPlan
      responses:
        '200':
          description: List of sport plans
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Plan1
                    description:
                      type: string
                      example: My Sport Plan
                    sportType:
                      type: string
                      example: mysporttype
                    difficultyLevel:
                      type: string
                      example: difficult
                    recommendedDuration:
                      type: integer
                      example: 15
                    steps: 
                      type: array
                      items:
                        type: object
                        properties:
                          stepNum:
                            type: integer
                            example: 1
                          instruction:
                            type: string
                            example: first instruction
        '400':
          description: Failed to get your sport plan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get your sport plan
                  error:
                    type: string
                    example: Invalid input data
    delete:
      summary: Delete a SportPlan
      operationId: deleteSportPlan
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sport plan deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Sport plan deleted successfully
        '400':
          description: Deletion failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Deletion failed
                  error:
                    type: string
                    example: Invalid input data
  /api/sportplan/:
    post:
      summary: Create a New SportPlan
      operationId: createNewSportPlan
      requestBody:
        description: Create a new sport plan
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: Plan1
                  description:
                    type: string
                    example: My Sport Plan
                  sportType:
                    type: string
                    example: mysporttype
                  difficultyLevel:
                    type: string
                    example: difficult
                  recommendedDuration:
                    type: integer
                    example: 15
                  steps: 
                    type: array
                    items:
                      type: object
                      properties:
                        stepNum:
                          type: integer
                          example: 1
                        instruction:
                          type: string
                          example: first instruction
      responses:
        '201':
          description: Sport plan created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Sport plan created successfully
        '400':
          description: Sport plan creation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Sport plan creation failed
                  error:
                    type: string
                    example: Invalid input data
  /api/communities/posts/reply-posts:
    get:
      summary: Get Your Reply Post
      operationId: GetYourPost
      responses:
        '200':
          description: List of Reply Post
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    postId:
                      type: string
                      example: post123
                    content:
                      type: string
                      example: 'This is a post content'
                    author:
                      type: string
                      example: Author Name
        '400':
          description: Failed to get your reply post
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get your reply post
                  error:
                    type: string
                    example: Invalid input data
    post:
      summary: Reply a Post
      operationId: ReplyPost
      requestBody:
        description: ReplyPost in a Post
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                  example: post123
                content:
                  type: string
                  example: 'This is a post content.'
                author:
                  type: string
                  example: user123
      responses:
        '201':
          description: Reply Post created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Reply Post created successfully
        '400':
          description: Reply Post creation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Reply Post creation failed
                  error:
                    type: string
                    example: Invalid input data          
  /api/communities/posts/{postId)/reply-posts: 
    put:
      summary: Update a Reply Post
      operationId: updateReplyPost
      requestBody:
        description: Update reply post details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: 'This is a post content.'
      responses:
        '200':
          description: ReplyPost updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ReplyPost updated successfully
        '400':
          description: Update failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Update failed
                  error:
                    type: string
                    example: Invalid input data
    delete:
      summary: Delete a ReplyPost
      operationId: deleteReplyPost
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ReplyPost deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ReplyPost deleted successfully
        '400':
          description: Deletion failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Deletion failed
                  error:
                    type: string
                    example: Invalid input data
  /api/communities/{communityId}/events/{eventId}/leave:
    post:
      summary: Removes the authenticated user from an event within a specific community
      operationId: leaveFromEvent
      requestBody:
        description: Leave From Event
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  message:
                    type: string
                    example: User successfully leave to the event
                  userId:
                    type: string
                    description: ID of the user who leave the event
                    example: user123
                  eventId:
                    type: string
                    description: ID of the event the user leaved
                    example: event123
      responses:
        '200':
          description: User successfully removed from the event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User successfully removed from the event
                  userId:
                    type: string
                    description: ID of the user who left the event
                    example: user123
                  eventId:
                    type: string
                    description: ID of the event the user left
                    example: event123
        '400':
          description: Failed to leave the event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to leave the event
                  error:
                    type: string
                    example: Invalid input data
        '401':
          description: Unauthorized - user not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized - user not authenticated
        '404':
          description: Event or community not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Event or community not found
  /api/communities/{communityId}/events/{eventId}/join:
    post:
      summary: Adds the authenticated user to an event within a specific community
      parameters:
        - in: path
          name: communityId
          required: true
          description: ID of the community
          schema:
            type: string
            example: community123
        - in: path
          name: eventId
          required: true
          description: ID of the event
          schema:
            type: string
            example: event123
      responses:
        '200':
          description: User successfully added to the event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User successfully added to the event
                  userId:
                    type: string
                    description: ID of the user who joined the event
                    example: user123
                  eventId:
                    type: string
                    description: ID of the event the user joined
                    example: event123
        '400':
          description: Failed to join the event
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to join the event
                  error:
                    type: string
                    example: Invalid input data
        '401':
          description: Unauthorized - user not authenticated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized - user not authenticated
        '404':
          description: Event or community not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Event or community not found
  /api/communities/{communityId}/events/{eventId}:
    get:
      summary: Retrieves an event by its ID within a specific community
      parameters:
        - in: path
          name: communityId
          required: true
          description: ID of the community
          schema:
            type: string
            example: community123
        - in: path
          name: eventId
          required: true
          description: ID of the event
          schema:
            type: string
            example: event123
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  eventId:
                    type: string
                    example: event123
                  name:
                    type: string
                    example: Event Name
                  description:
                    type: string
                    example: Event Description
                  creator:
                    type: string
                    example: Creator Name
                  communityId:
                    type: string
                    example: community123
                  startTime:
                    type: string
                    example: "2023-05-25T15:00:00Z"
                  endTime:
                    type: string
                    example: "2023-05-25T16:00:00Z"
                  participants:
                    type: array
                    items:
                      type: string
                    example: ["Participant1", "Participant2"]
                  points:
                    type: integer
                    example: 100
        '404':
          description: Event or community not found
        '401':
          description: Unauthorized - user not authenticated
    put:
      summary: Updates an event by its ID within a specific community
      parameters:
        - in: path
          name: communityId
          required: true
          description: ID of the community
          schema:
            type: string
            example: community123
        - in: path
          name: eventId
          required: true
          description: ID of the event
          schema:
            type: string
            example: event123
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Event Name
                description:
                  type: string
                  example: Event Description
                startTime:
                  type: string
                  example: "2023-05-25T15:00:00Z"
                endTime:
                  type: string
                  example: "2023-05-25T16:00:00Z"
                points:
                  type: integer
                  example: 100
      responses:
        '200':
          description: Event successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Event successfully updated
                  eventId:
                    type: string
                    example: event123
        '400':
          description: Invalid input data
        '401':
          description: Unauthorized - user not authenticated
        '404':
          description: Event or community not found
    delete:
      summary: Deletes an event by its ID within a specific community
      parameters:
        - in: path
          name: communityId
          required: true
          description: ID of the community
          schema:
            type: string
            example: community123
        - in: path
          name: eventId
          required: true
          description: ID of the event
          schema:
            type: string
            example: event123
      responses:
        '200':
          description: Event successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Event successfully deleted
                  eventId:
                    type: string
                    example: event123
        '401':
          description: Unauthorized - user not authenticated
        '404':
          description: Event or community not found
  /api/communities/{id}/members:
    get:
      summary: List all members of a specific community by its ID
      operationId: listCommunityMembers
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Id of the community
      responses:
        '200':
          description: List of members
          content:
            application/json:
              schema:
                type: object
                properties:
                  communityId:
                    type: string
                    example: community123
                  members:
                    type: array
                    items:
                      type: object
                      properties:
                        userId:
                          type: string
                          example: user123
                        displayName:
                          type: string
                          example: User Name
                        email:
                          type: string
                          example: user@example.com
                        joinedAt:
                          type: string
                          format: date-time
                          example: '2024-01-15T08:00:00Z'
        '404':
          description: Community not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Community not found
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
