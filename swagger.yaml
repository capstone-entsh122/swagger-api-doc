openapi: 3.0.0
info:
  title: One-Stop Sport App API
  version: 1.0.0
  description: API documentation for the One-Stop Sport App
servers:
  - url: http://localhost:3000
    description: Local server
  - url: https://api.yoursportapp.com
    description: Production server
paths:
  /api/users/signup:
    post:
      summary: User Signup
      operationId: userSignup
      requestBody:
        description: User signup details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: user@example.com
                displayName:
                  type: string
                  example: User Name
                gender:
                  type: string
                  example: male
                age:
                  type: integer
                  example: 25
                equipment:
                  type: string
                  example: none
      responses:
        '200':
          description: Signup successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Signup successful
        '500':
          description: Signup failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error during user signup
  /api/users/preferences:
    post:
      summary: Set User Preferences
      operationId: setUserPreferences
      security:
        - bearerAuth: []
      requestBody:
        description: User preferences details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                motivation:
                  type: string
                  example: Get fit
                availableTime:
                  type: integer
                  example: 30
                fitnessLevel:
                  type: string
                  example: average
                placePreference:
                  type: string
                  example: home
                socialPreference:
                  type: string
                  example: alone
                diseaseHistory:
                  type: array
                  items:
                    type: string
                  example: ["hypertension"]
                weight: 
                  type: integer
                  example: 50
                height:
                  type: integer
                  example: 160
      responses:
        '200':
          description: Preferences set successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Preferences set successfully
                  recommendedSports:
                    type: array
                    items:
                      type: string
                    example: ["Yoga", "Running", "Swimming"]
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid input data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error updating preference
    put:
      summary: Update User Preferences
      operationId: updateUserPreferences
      security:
        - bearerAuth: []
      requestBody:
        description: User preferences data to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                motivation:
                  type: string
                  example: Lose weight
                availableTime:
                  type: integer
                  example: 45
                fitnessLevel:
                  type: string
                  example: good
                placePreference:
                  type: string
                  example: outdoor
                socialPreference:
                  type: string
                  example: with others
                diseaseHistory:
                  type: array
                  items:
                    type: string
                  example: ["cardiovascular"]
      responses:
        '200':
          description: Preferences updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Preferences updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid input data
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error updating preference
  /api/users/profile:
    get:
      summary: Get User Profile
      operationId: getUserProfile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: string
                    example: user123
                  email:
                    type: string
                    example: user@example.com
                  displayName:
                    type: string
                    example: User Name
                  gender:
                    type: string
                    example: male
                  age:
                    type: integer
                    example: 25
                  location:
                    type: string
                    example: City, Country
                  equipment:
                    type: string
                    example: none
                  preferences:
                    type: object
                    properties:
                      motivation:
                        type: string
                        example: Get fit
                      availableTime:
                        type: integer
                        example: 30
                      fitnessLevel:
                        type: string
                        example: average
                      placePreference:
                        type: string
                        example: home
                      socialPreference:
                        type: string
                        example: alone
                      diseaseHistory:
                        type: array
                        items:
                          type: string
                        example: ["hypertension"]
                  communities:
                    type: array
                    items:
                      type: string
                    example: ["community123"]
                  points:
                    type: integer
                    example: 100
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error getting user details
    put:
      summary: Update User Profile
      operationId: updateUserProfile
      security:
        - bearerAuth: []
      requestBody:
        description: User profile data to update
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  type: string
                  example: Updated Name
                location:
                  type: string
                  example: New City, Country
                equipment:
                  type: string
                  example: basic
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Profile updated successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Invalid input data
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error updating user details
  /api/users/profile/photo:
    post:
      summary: Upload Profile Photo
      operationId: uploadProfilePhoto
      security:
        - bearerAuth: []
      requestBody:
        description: Profile photo upload
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                photo:
                  type: string
                  format: binary
      responses:
        '200':
          description: Profile photo uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Profile photo uploaded successfully
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: No file uploaded
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error uploading profile photo
    get:
      summary: Get Profile Photo
      operationId: getProfilePhoto
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile photo URL retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  profilePhotoUrl:
                    type: string
                    example: http://example.com/photo.jpg
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '404':
          description: Profile photo not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Profile photo not found
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error retrieving profile photo URL
  /api/users/delete:
    delete:
      summary: Delete User Account
      operationId: deleteUserAccount
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User account deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User account deleted successfully
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Unauthorized
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error
                  error:
                    type: string
                    example: Error deleting user account
  /api/food/calories:
    post:
      summary: Predict Food Calories
      operationId: predictFoodCalories
      requestBody:
        description: Image of the food
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary        
      responses:
        '200':
          description: Prediction successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  calories:
                    type: number
                    example: 250
        '400':
          description: Prediction failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Prediction failed
                  error:
                    type: string
                    example: Invalid input data
  /api/community:
    get:
      summary: Get all communities
      operationId: getAllCommunities
      responses:
        '200':
          description: List of all communities
          content:
            application/json:
              schema:
                type: object
                properties:
                  communitiesId:
                    type: string
                    example: community123
                  name:
                    type: string
                    example: Community Name
                  description:
                    type: string
                    example: Community Description
                  creator: 
                    type: string
                    example: Creator Name
                  members: 
                    type: string
                    example: Member Name
                  posts: 
                    type: object
                    properties:
                      content: 
                        type: string
                        example: 'This is a post content'
                      author:
                        type: string
                        example: Author Name
                  events:
                    type: object
                    properties:
                      name: 
                        type: string
                        example: Event Name
                      description:
                        type: string
                        example: Event Description
                      creator:
                        type: string
                        example: Creator Name
                      communities:
                        type: string
                        example: community123
                      startTime: 
                        type: string
                        example: "2023-05-25T15:00:00Z"
                      endTime:
                        type: string
                        example: "2023-05-25T16:00:00Z"
                      participants:
                        type: string
                        example: Name Participant
                      points:
                        type: integer
                        example: 100
        '400':
          description: Failed to get communities
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get communities
                  error:
                    type: string
                    example: Invalid input data
  /api/community/posts:
    get:
      summary: Get Your Communities
      operationId: GetYourCommunities
      responses:
        '200':
          description: List of communities
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    postId:
                      type: string
                      example: post123
                    content:
                      type: string
                      example: 'This is a post content'
                    author:
                      type: string
                      example: Author Name
        '400':
          description: Failed to get your communities
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get your communities
                  error:
                    type: string
                    example: Invalid input data
    post:
      summary: Create a New Post
      operationId: createNewPost
      requestBody:
        description: Create a new post in a community
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                  example: post123
                content:
                  type: string
                  example: 'This is a post content.'
                author:
                  type: string
                  example: user123
      responses:
        '201':
          description: Post created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Post created successfully
        '400':
          description: Post creation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Post creation failed
                  error:
                    type: string
                    example: Invalid input data          
    put:
      summary: Update a Post
      operationId: updatePost
      requestBody:
        description: Update post details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: 'This is a post content.'
      responses:
        '200':
          description: Post updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Post updated successfully
        '400':
          description: Update failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Update failed
                  error:
                    type: string
                    example: Invalid input data
  /api/community/posts/delete:
    delete:
      summary: Delete a Post
      operationId: deletePost
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Post deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Post deleted successfully
        '400':
          description: Deletion failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Deletion failed
                  error:
                    type: string
                    example: Invalid input data
  /api/community/event:
    post:
      summary: Create a New Event
      operationId: createNewEvent
      requestBody:
        description: Create a new event in a community
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                  example: Event Name
                description:
                  type: string
                  example: Event Description
                creator:
                  type: string
                  example: Creator Name
                communities:
                  type: string
                  example: community123
                startTime: 
                  type: string
                  example: "2023-05-25T15:00:00Z"
                endTime:
                  type: string
                  example: "2023-05-25T16:00:00Z"
                participants:
                  type: string
                  example: Name Participant
                points:
                  type: integer
                  example: 100
      responses:
        '201':
          description: Event created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Event created successfully
        '400':
          description: Event creation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Event creation failed
                  error:
                    type: string
                    example: Invalid input data
    put:
      summary: Update an Event
      operationId: updateEvent
      security:
        - bearerAuth: []
      requestBody:
        description: Update event details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: 
                  type: string
                  example: Event Name
                description:
                  type: string
                  example: Event Description
                startTime: 
                  type: string
                  example: "2023-05-25T15:00:00Z"
                endTime:
                  type: string
                  example: "2023-05-25T16:00:00Z"
                participants:
                  type: string
                  example: Name Participant
      responses:
        '200':
          description: Event updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Event updated successfully
        '400':
          description: Update failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Update failed
                  error:
                    type: string
                    example: Invalid input data
    get:
      summary: Get Events
      operationId: getEvents
      responses:
        '200':
          description: List of events
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name: 
                      type: string
                      example: Event Name
                    description:
                      type: string
                      example: Event Description
                    creator:
                      type: string
                      example: Creator Name
                    communities:
                      type: string
                      example: community123
                    startTime: 
                      type: string
                      example: "2023-05-25T15:00:00Z"
                    endTime:
                      type: string
                      example: "2023-05-25T16:00:00Z"
                    participants:
                      type: string
                      example: Name Participant
                    points:
                      type: integer
                      example: 100
        '400':
          description: Failed to get events
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get events
                  error:
                    type: string
                    example: Invalid input data
  /api/community/events/delete:
    delete:
      summary: Delete an Event
      operationId: deleteEvent
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Event deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Event deleted successfully
        '400':
          description: Deletion failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Deletion failed
                  error:
                    type: string
                    example: Invalid input data
  /api/sportplan:
    get:
      summary: Get Your SportPlan
      operationId: getYourSportPlan
      responses:
        '200':
          description: List of sport plans
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Plan1
                    description:
                      type: string
                      example: My Sport Plan
                    sportType:
                      type: string
                      example: mysporttype
                    difficultyLevel:
                      type: string
                      example: difficult
                    recommendedDuration:
                      type: integer
                      example: 15
                    steps: 
                      type: array
                      items:
                        type: object
                        properties:
                          stepNum:
                            type: integer
                            example: 1
                          instruction:
                            type: string
                            example: first instruction
        '400':
          description: Failed to get your sport plan
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get your sport plan
                  error:
                    type: string
                    example: Invalid input data
    post:
      summary: Create a New SportPlan
      operationId: createNewSportPlan
      requestBody:
        description: Create a new sport plan
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: Plan1
                  description:
                    type: string
                    example: My Sport Plan
                  sportType:
                    type: string
                    example: mysporttype
                  difficultyLevel:
                    type: string
                    example: difficult
                  recommendedDuration:
                    type: integer
                    example: 15
                  steps: 
                    type: array
                    items:
                      type: object
                      properties:
                        stepNum:
                          type: integer
                          example: 1
                        instruction:
                          type: string
                          example: first instruction
      responses:
        '201':
          description: Sport plan created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Sport plan created successfully
        '400':
          description: Sport plan creation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Sport plan creation failed
                  error:
                    type: string
                    example: Invalid input data
  /api/sportplan/delete:
    delete:
      summary: Delete a SportPlan
      operationId: deleteSportPlan
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Sport plan deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Sport plan deleted successfully
        '400':
          description: Deletion failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Deletion failed
                  error:
                    type: string
                    example: Invalid input data
  /api/community/posts/reply-posts:
    get:
      summary: Get Your Reply Post
      operationId: GetYourPost
      responses:
        '200':
          description: List of Reply Post
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    postId:
                      type: string
                      example: post123
                    content:
                      type: string
                      example: 'This is a post content'
                    author:
                      type: string
                      example: Author Name
        '400':
          description: Failed to get your reply post
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Failed to get your reply post
                  error:
                    type: string
                    example: Invalid input data
    post:
      summary: Reply a Post
      operationId: ReplyPost
      requestBody:
        description: ReplyPost in a Post
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                postId:
                  type: string
                  example: post123
                content:
                  type: string
                  example: 'This is a post content.'
                author:
                  type: string
                  example: user123
      responses:
        '201':
          description: Reply Post created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Reply Post created successfully
        '400':
          description: Reply Post creation failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Reply Post creation failed
                  error:
                    type: string
                    example: Invalid input data          
    put:
      summary: Update a Reply Post
      operationId: updateReplyPost
      requestBody:
        description: Update reply post details
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  example: 'This is a post content.'
      responses:
        '200':
          description: ReplyPost updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ReplyPost updated successfully
        '400':
          description: Update failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Update failed
                  error:
                    type: string
                    example: Invalid input data
  /api/community/posts/reply-posts/delete:
    delete:
      summary: Delete a ReplyPost
      operationId: deleteReplyPost
      security:
        - bearerAuth: []
      responses:
        '200':
          description: ReplyPost deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: ReplyPost deleted successfully
        '400':
          description: Deletion failed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Deletion failed
                  error:
                    type: string
                    example: Invalid input data

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
